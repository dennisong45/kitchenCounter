package main

import (
	"bytes"
	"mime/multipart"
	"net/http/httptest"
	"testing"

	"github.com/gin-gonic/gin"
	"github.com/stretchr/testify/assert"
)

func TestFileOpenUtil(t *testing.T) {
	// Create a new gin context
	w := httptest.NewRecorder()
	c, _ := gin.CreateTestContext(w)

	// Create a mock file
	var buffer bytes.Buffer
	writer := multipart.NewWriter(&buffer)
	part, err := writer.CreateFormFile("file", "test.txt")
	if err != nil {
		t.Fatalf("Failed to create form file: %v", err)
	}
	part.Write([]byte("this is a test file"))
	writer.Close()

	// Create a new file header
	req := httptest.NewRequest("POST", "/", &buffer)
	req.Header.Set("Content-Type", writer.FormDataContentType())
	c.Request = req

	// Extract the file header from the request
	fileHeader, err := c.FormFile("file")
	if err != nil {
		t.Fatalf("Failed to extract form file: %v", err)
	}

	// Create an instance of RestAPI
	api := &RestAPI{}

	// Call the function
	data, err := fileOpenUtil(fileHeader, c, api)

	// Assertions
	assert.NoError(t, err, "fileOpenUtil should not return an error")
	assert.NotNil(t, data, "data should not be nil")
	assert.Equal(t, []byte("this is a test file"), data, "data should match the content of the file")
}
